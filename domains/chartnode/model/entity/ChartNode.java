package vn.fis.spro.customer.domains.chartnode.model.entity;

import com.fasterxml.jackson.annotation.JsonBackReference;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;
import vn.fis.spro.customer.domains.chart.model.entity.Chart;
import vn.fis.spro.customer.domains.usertitle.model.entity.UserTitle;

import javax.persistence.*;
import java.time.LocalDate;
import java.util.List;

/**
 * Generated by Speed Generator
 *
 * @author <a href="mailto:ngtrungkien@gmail.com">Kien Nguyen</a>
 */
@Data
@Entity
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "chart_node")
public class ChartNode {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    private Long id;

    @Column(name = "code", nullable = true)
    private String code;

    @Column(name = "name", nullable = true)
    private String name;

    @Column(name = "level", nullable = true)
    private Integer level;

    @Column(name = "status", nullable = true)
    private String status;

    @Column(name = "description", nullable = true)
    private String description;

    @Column(name = "color", nullable = true)
    private String color;

    @Column(name = "color_applied", nullable = true)
    private boolean colorApplied;

    @Column(name = "chart_link_id", nullable = true)
    private Long chartLinkId;

    @Column(name = "node_link_id", nullable = true)
    private Long nodeLinkId;

    @Column(name = "created_date", nullable = true)
    private LocalDate createdDate;

    @Column(name = "created_user", nullable = true)
    private String createdUser;

    @Column(name = "modified_date", nullable = true)
    private LocalDate modifiedDate;

    @Column(name = "modified_user", nullable = true)
    private String modifiedUser;

    @Column(name = "short_name", nullable = true)
    private String shortName;

    @Column(name = "cost_center", nullable = true)
    private String costCenter;

    @Column(name = "cost_center_name", nullable = true)
    private String costCenterName;

    @Column(name = "parent_code")
    private String parentCode;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "chart_id", nullable = false)
    @ToString.Exclude
    @JsonBackReference
    private Chart chart;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "node_parent_id")
    @ToString.Exclude
    private ChartNode parent;

    @Transient
    private List<String> listEmail;

    @OneToMany(mappedBy = "chartNode", fetch = FetchType.LAZY)
    private List<UserTitle> userTitles;


    @PrePersist
    private void prePersist() {
        setCreatedDate(LocalDate.now());
        setModifiedDate(LocalDate.now());
    }

    @PreUpdate
    private void preUpdate() {
        setModifiedDate(LocalDate.now());
    }

}
